version: '3.9'

volumes:
   geoserver-data:
   geo-db-data:

services:
  db:
    image: kartoza/postgis:${POSTGIS_VERSION_TAG}
    container_name: postgis4umap
    volumes:
      - geo-db-data:/var/lib/postgresql
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
      - ALLOW_IP_RANGE=${ALLOW_IP_RANGE}
      - FORCE_SSL=TRUE
    restart: on-failure
    healthcheck:
      test: "PGPASSWORD=${POSTGRES_PASS} pg_isready -h 127.0.0.1 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"
    networks:
      - umap
      
  geoserver4umap:
    image: kartoza/geoserver:${GS_VERSION}
    container_name: geoserver4umap
    
    volumes:
      - geoserver-data:/opt/geoserver/data_dir
      - ./data/geoserver-external-data:/geoserver-external-data
    ports:
      - ${GEOSERVER_PORT}:8080
    restart: on-failure
    environment:
      - TZ=Asia/Ho_Chi_Minh
      - DISABLE_WEB_INTERFACE=${DISABLE_WEB_INTERFACE}
      - GEOSERVER_DATA_DIR=${GEOSERVER_DATA_DIR}
      - GEOWEBCACHE_CACHE_DIR=${GEOWEBCACHE_CACHE_DIR}
      - GEOSERVER_ADMIN_PASSWORD=${GEOSERVER_ADMIN_PASSWORD}
      - GEOSERVER_ADMIN_USER=${GEOSERVER_ADMIN_USER}
      - INITIAL_MEMORY=${INITIAL_MEMORY}
      - MAXIMUM_MEMORY=${MAXIMUM_MEMORY}
      - STABLE_EXTENSIONS=${STABLE_EXTENSIONS}
      - COMMUNITY_EXTENSIONS=${COMMUNITY_EXTENSIONS}
      - GEOSERVER_CONTEXT_ROOT=${GEOSERVER_CONTEXT_ROOT}
      - CSRF_WHITELIST=${GEOSERVER_CSRF_WHITELIST}
      # disk quota storage in PostgreSQL DB
      - DB_BACKEND=${DB_BACKEND}
      - HOST=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=gis
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASS=${POSTGRES_PASS}
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure
    healthcheck:
      test: "curl --fail --silent --write-out 'HTTP CODE : %{http_code}\n' --output /dev/null -u ${GEOSERVER_ADMIN_USER}:'${GEOSERVER_ADMIN_PASSWORD}' http://localhost:8080/geoserver/rest/about/version.xml"
      interval: 1m30s
      timeout: 10s
      retries: 3
      
    networks:
      - umap

  web4umap:
    build:
      context: ./umap-web
      args: 
        IMAGE_VERSION: ${UMAP_WEB_IMAGE_VERSION}
      target: PRODUCTION
    image: ${DOCKER_REGISTRY:-docker}/umap/web4umap:${UMAP_WEB_IMAGE_VERSION:-latest}
    container_name: web4umap
    # env_file:
    #   - .env
    environment:
      - TZ=Asia/Ho_Chi_Minh
    ports:
      - 3001:3000
    restart: on-failure

networks:
  umap:
    external: false