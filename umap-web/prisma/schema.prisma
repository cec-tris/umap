generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model tilepage {
  key                      String   @id @db.VarChar(320)
  tileset_id               String?  @db.VarChar(320)
  page_z                   Int?     @db.SmallInt
  page_x                   Int?
  page_y                   Int?
  creation_time_minutes    Int?
  frequency_of_use         Float?
  last_access_time_minutes Int?
  fill_factor              Float?
  num_hits                 Decimal? @db.Decimal(64, 0)
  tileset                  tileset? @relation(fields: [tileset_id], references: [key], onDelete: Cascade, onUpdate: NoAction)

  @@index([frequency_of_use(sort: Desc)], map: "tilepage_frequency")
  @@index([last_access_time_minutes(sort: Desc)], map: "tilepage_last_access")
  @@index([tileset_id, fill_factor], map: "tilepage_tileset")
}

model tileset {
  key           String     @id @db.VarChar(320)
  layer_name    String?    @db.VarChar(128)
  gridset_id    String?    @db.VarChar(32)
  blob_format   String?    @db.VarChar(64)
  parameters_id String?    @db.VarChar(41)
  bytes         Decimal    @default(0) @db.Decimal(21, 0)
  tilepage      tilepage[]

  @@index([layer_name], map: "tileset_layer")
}

model user_sessions {
  session_key  String   @id(map: "user_sessions_pk") @db.VarChar(100)
  lat          Float?
  lng          Float?
  zoom         Float?
  updated_date DateTime @db.Date
  expires      String?
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt   DateTime
}